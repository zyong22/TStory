{{>/layout/main-header}}

<div class="container">
    <div class="my_auth_box">
        <div class="my_auth_form_box">
            <div class="my_auth_form_box_title">JSotry</div>
            <form id="join-form" action="/join" method="post">
                <input id="username" class="my_auth_form_box_input" type="text" name="username" placeholder="아이디"
                       maxlength="20" value="ssar1" required />

                <!-- 아이디 체크용 -->
                <div id="usernameMessage" class="my_hidden"></div>

                <input id="password" class="my_auth_form_box_input" type="password" name="password" placeholder="비밀번호"
                       maxlength="20" value="1234" required />
                <input id="same-password" class="my_auth_form_box_input" type="password" name="confirm-password" placeholder="비밀번호 확인"
                       maxlength="20" value="1234" required />

                <!-- 비밀번호 체크용 -->
                <div id="pwCheck" class="my_hidden"></div>

                <input class="my_auth_form_box_input" type="email" name="email" placeholder="이메일" maxlength="60"
                       value="ssar1@nate.com" required />
                <button id="join-btn" type="submit" class="my_secondary_btn">회원가입</button>
            </form>
            <div class="my_auth_form_box_link">
                <div><a href="/login-form">로그인</a></div>
                <div><a href="/user/password-reset-form">비밀번호 찾기</a></div>
            </div>
        </div>
    </div>
    <br />
</div>

<script>
    // 비밀번호 2개 맞는지 체크

    // 둘 다 같음
    // $('#password').keyup(checkPasswordMatch);
    // $('#same-password').on('keyup', checkPasswordMatch);

    // input -> 복붙같은 동작도 감지함
    $('#password, #same-password').on('input', checkPasswordMatch);
    function checkPasswordMatch() {
        if ($('#password').val() !== $('#same-password').val()) {
            $('#pwCheck').text('비밀번호가 일치하지 않습니다')
                    .css('color','red')
                    .removeClass('my_hidden')

            // pwCheck.textContent = '비밀번호가 일치하지 않습니다.';
            // pwCheck.style.color = 'red'
            // pwCheck.classList.remove('my_hidden');
        } else {
            $('#pwCheck').text('비밀번호 확인 완료')
                   .css('color','green')
                   .removeClass('my_hidden')
        }
    }

    // 아이디 중복 체크
    $('#username').on('input', async function(e){
        let username = $(this).val(); // username 값

        const data = {
            username: $('#username').val()
        };

        try {

            if(username) {
                let response = await fetch('/user/check', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                let responseBody = await response.json();

                if (!responseBody) {
                    $('#usernameMessage').text('사용 가능한 아이디입니다.').css('color', 'green').show();
                    $('#join-btn').prop('disabled', false);
                } else {
                    $('#usernameMessage').text('이미 사용 중인 아이디입니다.').css('color', 'red').show();
                    $('#join-btn').prop('disabled', true);
                }
            } else {
                $('#usernameMessage').hide();
            }

        } catch(e) {
            alert(e.message || '아이디 확인 중 오류 발생')
        }
    });


    // function checkUsername() {
    //     const username = document.getElementById('username').value;
    //     const usernameMessage = document.getElementById('usernameMessage');
    //
    //     if (username) {
    //         fetch(`/user/check?username=${username}`)
    //                 .then(response => {
    //                     if (!response.ok) {
    //                         throw new Error('Network response was not ok');
    //                     }
    //                     return response.json();
    //                 })
    //                 .then(data => {
    //                     if (!data) {
    //                         usernameMessage.textContent = '사용 가능한 아이디입니다.';
    //                         usernameMessage.style.color = 'green';
    //                     } else {
    //                         usernameMessage.textContent = '이미 사용 중인 아이디입니다.';
    //                         usernameMessage.style.color = 'red';
    //                     }
    //                     usernameMessage.classList.remove('my_hidden');
    //                 })
    //                 .catch(error => {
    //                     console.error('Error checking username:', error);
    //                     usernameMessage.textContent = '아이디 확인 중 오류가 발생했습니다.';
    //                     usernameMessage.style.color = 'red';
    //                     usernameMessage.classList.remove('my_hidden');
    //                 });
    //     } else {
    //         usernameMessage.textContent = '';
    //         usernameMessage.classList.add('my_hidden');
    //     }
    // }

</script>

{{>/layout/footer}}